@use 'sass:color';
@use 'src/scss/utilities.scss';

.button {
  $buttonRoundness: 4rem;
  $innerStripeWidth: 2px;
  $innerStripeOffset: -6px;
  $innerStripeChange: 2px;
  $buttonHeight: 8px;
  $buttonShadowLength: 6px;
  $pressAmount: 4px;
  $buttonShadowStyle: 0px 4px 2px 0px
    color.scale(utilities.$effThisOrange, $blackness: 15%);
  $easingFunction: cubic-bezier(0.87, 0, 0.13, 1);
  $easingTime: 0.1s;

  position: relative;
  display: inline-flex;
  padding: 1rem 2rem;
  border-radius: $buttonRoundness;
  font-weight: bold;
  color: utilities.$white;

  transform: translate3d(0, 0, 0);
  transition: transform $easingTime $easingFunction,
    box-shadow $easingTime $easingFunction;

  background-color: utilities.$batigansMawOrange;
  outline: $innerStripeWidth solid utilities.$effThisOrange;
  outline-offset: $innerStripeOffset;

  box-shadow: $buttonShadowStyle,
    0px $buttonHeight 0px 0px utilities.$effThisOrange;

  &:after {
    transition: border-bottom $easingTime $easingFunction,
      bottom $easingTime $easingFunction;
    content: '';
    position: absolute;
    top: 0;
    bottom: -$buttonHeight - $buttonShadowLength;
    left: 0;
    right: 0;
    border-radius: $buttonRoundness;
    border-bottom: $buttonShadowLength solid utilities.$black;
  }

  &:hover {
    transform: translate3d(0, $pressAmount, 0);
    background-color: utilities.$batigansMawOrange;

    outline: $innerStripeWidth + $innerStripeChange solid
      utilities.$effThisOrange;
    outline-offset: $innerStripeOffset - $innerStripeChange;

    // add a pixel to help with subpixel rendering jank
    box-shadow: $buttonShadowStyle,
      0px $buttonHeight - $pressAmount + 1px 0px 0px utilities.$effThisOrange;

    &:after {
      bottom: -$buttonHeight - $buttonShadowLength + $pressAmount * 2;
      border-bottom: $buttonShadowLength - $pressAmount solid utilities.$black;
    }
  }

  // temp
  margin-bottom: 3rem;

  &:any-link {
    text-decoration: none;
    color: utilities.$white;
  }
}
